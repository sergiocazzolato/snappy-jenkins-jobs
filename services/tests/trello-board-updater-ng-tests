#!/bin/bash

set -ex

# Set variables for testing

SNAP="core"
VERSION="$(echo $((1 + RANDOM % 10000)))"
REVISION="$(echo $((1 + RANDOM % 10000)))"
CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_UT="${CURRENT_DIR}/../trello-board-updater-ng"
TRELLO_BOARD="$TEST_TRELLO_BOARD"

if [ -z "$TRELLO_TOKEN" ] || [ -z "$TRELLO_API_KEY" ] || [ -z "$TEST_TRELLO_BOARD" ]; then
	echo "Variables TRELLO_TOKEN, TRELLO_API_KEY and TEST_TRELLO_BOARD have to be defined, exiting..."
	exit 1
fi

CARD_NAME="${SNAP} - ${VERSION} - (${REVISION})"
ATTACHMENT_FILE="test_file"
ATTACHMENT_FILE_NAME="test file"
ATTACHMENT_URL="https://paste.ubuntu.com/p/FTSM95Zm8n/"
ATTACHMENT_URL_NAME="test url"

# Prepare the test area
rm -rf "$ATTACHMENT_FILE" && echo "THIS IS A TEST" > "$ATTACHMENT_FILE"

# Execute the tests
"$SCRIPT_UT" search --snap "$SNAP" --version "$VERSION" --revision "$REVISION"
"$SCRIPT_UT" create --snap "$SNAP" --version "$VERSION" --revision "($REVISION)" --channel beta --config "${CURRENT_DIR}/trello_card_config_1.yaml" | grep "card created: $CARD_NAME"
"$SCRIPT_UT" search --snap "$SNAP" --version "$VERSION" --revision "$REVISION" | grep "card found: $CARD_NAME"

"$SCRIPT_UT" attach --snap "$SNAP" --version "$VERSION" --revision "($REVISION)" --name "$ATTACHMENT_FILE_NAME" --file "$ATTACHMENT_FILE" | grep "file attached to card: $CARD_NAME"
"$SCRIPT_UT" attach --snap "$SNAP" --version "$VERSION" --revision "($REVISION)" --name "$ATTACHMENT_URL_NAME" --url "$ATTACHMENT_URL" | grep "url attached to card: $CARD_NAME"

"$SCRIPT_UT" add-result --snap "$SNAP" --version "$VERSION" --revision "($REVISION)" --name "test item 1" --arch "test arch" --link "$ATTACHMENT_URL" | grep "link added to checklist on card: $CARD_NAME"
"$SCRIPT_UT" complete --snap "$SNAP" --version "$VERSION" --revision "($REVISION)" --config "${CURRENT_DIR}/trello_card_config_1.yaml" | grep -v "set as ready"
"$SCRIPT_UT" add-result --snap "$SNAP" --version "$VERSION" --revision "($REVISION)" --name "test item 1 [[Results](${ATTACHMENT_URL})]" --arch "test arch" --summary "$ATTACHMENT_FILE" --passed | grep "comment added to card: $CARD_NAME"
"$SCRIPT_UT" complete --snap "$SNAP" --version "$VERSION" --revision "($REVISION)" --config "${CURRENT_DIR}/trello_card_config_1.yaml" | grep "set as ready"

"$SCRIPT_UT" auto-clean --config "${CURRENT_DIR}/trello_general_config_1.yaml" | grep "card skipped: $CARD_NAME"
"$SCRIPT_UT" move --snap "$SNAP" --version "$VERSION" --revision "($REVISION)" --channel candidate | grep "card $CARD_NAME moved to list: Candidate"
sleep 2
"$SCRIPT_UT" auto-clean --config "${CURRENT_DIR}/trello_general_config_1.yaml" | grep "card archived: $CARD_NAME"

show=$("$SCRIPT_UT" show --snap "$SNAP" --version "$VERSION" --revision "$REVISION")
"$SCRIPT_UT" delete --snap "$SNAP" --version "$VERSION" --revision "($REVISION)" | grep "card deleted: $CARD_NAME"

echo $show | grep -q "name: $CARD_NAME"
echo $show | grep -q "list: Complete"
echo $show | grep -q "result: PASS"
echo $show | grep -q "ready: True"
echo $show | grep -q "test item 2: True"
echo $show | grep -q "test url: $ATTACHMENT_URL"
echo $show | grep -E "test file:.*/$ATTACHMENT_FILE"

# Restore the test area
rm -rf "$ATTACHMENT_FILE"
