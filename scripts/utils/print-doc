#!/usr/bin/python3

import argparse
import os
import re
import subprocess
import shutil
import yaml


def _make_parser():
    parser = argparse.ArgumentParser(
        description="""
Creates or deletes a set of services which run sprad tests 
"""
    )
    parser.add_argument(
        "--test",
        type=str,
        help="The path to the test dir or file",
    )
    parser.add_argument(
        "--suite",
        type=str,
        help="The path to the test suite",
    )
    return parser

def check_line(line):
    NOT_ALLOWED = ['>', '|']

    if line.strip(' \t\n\r').startswith("echo"):
        for not_allowed in NOT_ALLOWED:
            if not_allowed in line:
                return False
        return True

    return False

def process_content(content):
    processed_content = ""
    if not content:
        return
    for line in content.splitlines():
        if line.strip(' \t\n\r').startswith("echo") and '>' not in line:
            processed_content = '\n'.join([ processed_content, line.strip(' \t\n\r')])
    return processed_content

def print_section(name, content):
    print(name)
    print('-'*15)
    print('')
    if content:
        print(content)
    print('')

def print_test_doc(testfile):
    if not os.path.isfile(testfile):
        print("Test file: {} does not exist".format(testfile))
        return

    with open(testfile) as handle:
        data = yaml.safe_load(handle)

    summary = data.get('summary')
    description = data.get('description')
    prepare = data.get('description')
    execute = data.get('execute')
    restore = data.get('restore')

    print(testfile)
    print('*'*80)
    print_section('summary', summary)
    print_section('description', description)
    print_section('prepare', process_content(prepare))
    print_section('execute', process_content(execute))
    print_section('restore', process_content(restore))
    print('*'*80)

def print_suite_doc(testsuite):
    if not os.path.isdir(testsuite):
        print("Test suite: {} does not exist".format(testsuite))
        return

    for testdir in os.listdir(testsuite):
        testfile = os.path.join(testsuite, testdir, 'task.yaml')
        print_test_doc(testfile) 


def main():
    parser = _make_parser()
    args = parser.parse_args()

    if not args.test and not args.suite:
        parser.print_help() 

    if args.test:
        if os.path.isdir(args.test):
            testfile = os.path.join(args.test, 'task.yaml')
        else:
            testfile = args.test
        print_test_doc(testfile)

    if args.suite:
        print_suite_doc(args.suite)



if __name__ == "__main__":
    main()